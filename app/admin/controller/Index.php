<?php
/**
 * lemocms
 * ============================================================================
 * 版权所有 2018-2027 lemocms，并保留所有权利。
 * 网站地址: https://www.lemocms.com
 * ----------------------------------------------------------------------------
 * 采用最新Thinkphp6实现
 * ============================================================================
 * Author: yuege
 * Date: 2019/8/2
 */

namespace app\admin\controller;

use app\admin\model\AuthRule;
use app\common\controller\Backend;
use think\facade\Request;
use think\facade\View;
use think\facade\Db;
use think\facade\Cache;
use think\facade\Session;
use app\common\lib\Menu;

class Index extends Backend
{

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

    }

    /**
     * @return string
     * @throws \Exception
     * 首页
     */
    public function index()
    {
        // 所有显示的菜单；
        $admin_id = Session::get('admin.id');
        $menus = Cache::get('adminMenus_' . $admin_id);
        $menus = '';

        if (!$menus) {
            $cate = AuthRule::where('menu_status', 1)->order('sort asc')->select()->toArray();
            $menus = Menu::authMenu($cate);
            Cache::set('adminMenus_' . $admin_id, $menus, '3600');

        }
        $href = (string)url('main');
        $home = ["href" => $href, "icon" => "fa fa-home", "title" => "首页"];
        $menusinit = ['menus' => $menus, 'home' => $home];
        View::assign('menus', json_encode($menusinit));
        return view();

    }

    /**
     * @return string
     * @throws \think\db\exception\BindParamException
     * @throws \think\db\exception\PDOException
     * 主页面
     */


    public function stastic($type = 1)
    {
        if (Request::isPost()) {


            if ($type == 1) {
                $group = "FROM_UNIXTIME(order.cTime,'%Y-%m-%d : %H')"; //小时

            } else if ($type == 2) {
                $group = "FROM_UNIXTIME(order.cTime,'%Y-%m-%d')";// 天

            } else if ($type == 3) {
                $group = "FROM_UNIXTIME(order.cTime,'%Y-%m')";// month

            }

            $list = Db::name('order')
                ->alias('order')
                ->field([
                    "truncate(count(order.id)/100,2)" => 'y1',
                    "truncate(sum(order.orderMoney)/100,2)" => 'y2',
                    "truncate(sum(order.status)/100,2)" => 'y3',//支付数
                    "truncate(sum(order.status)/count(order.id),2)" => 'y4',//支付数
                    "truncate(sum(if(order.status='1' ,orderMoney,0))/100,2)" => 'y5',


                    $group => 'x'
                ])
                ->group($group)
                ->where('order.cTime>=' . (time() - 30 * 24 * 60 * 60))
                ->order('x desc')
                ->select();
            $this->success('', '', $list);
        } else {

        }
    }

    public function main()
    {
        $version = Db::query('SELECT VERSION() AS ver');


      $recentlyOrder=  Db::name('order')
          ->alias('order')
          ->join('goods_sku sku' ,'sku.id=order.skuId')
          ->field('sku.title productName,order.id')
          ->where('order.status=1')->limit(0,10)
            ->select();



        $list = Db::name('order')
            ->alias('order')
            ->join('pay_channel channel', 'order.channelId = channel.id')
            ->join('user user', 'order.uId = user.id')
            ->join('order_pay queue', 'order.id = queue.orderId', 'left')
            ->join('pay_account account', 'queue.userId = account.userId', 'left')
            ->join('pay_account toAccount', 'queue.toUserId = toAccount.userId')
            ->field([
                'sum(order.orderMoney)' => 'dayHaveMoney',
                "count(order.orderId)" => 'haveOrder',
                "sum(if(order.status='1' ,1,0))" => 'hadOrder',
                "sum(if(order.status='1' ,orderMoney,0))" => 'HadOrderMoney',
                'count(queue.mark)' => 'qMark',
                'count(queue.userId)' => 'accountId',
                'count(account.realNamed)' => 'accountName',
                'sum(order.channelMoney)' => 'channelMoney',
                "concat(account.realNamed,'-',account.userId)"=>'realNamed',
                "concat(toAccount.realNamed,'-',toAccount.userId)"=>'toAccountRealNamed',
                'account.userId' => 'id'

            ])->limit(0,1)
//
            ->select();
       $list=$list[0];

        $config = null;//Cache::get('main_config');

        if (!$config) {
            $config = [
                'url' => $_SERVER['HTTP_HOST'],
                'document_root' => $_SERVER['DOCUMENT_ROOT'],
                'document_protocol' => $_SERVER['SERVER_PROTOCOL'],
                'server_os' => PHP_OS,
                'server_port' => $_SERVER['SERVER_PORT'],
                'server_ip' => $_SERVER['REMOTE_ADDR'],
                'server_soft' => $_SERVER['SERVER_SOFTWARE'],
                'server_file' => $_SERVER['SCRIPT_FILENAME'],
                'php_version' => PHP_VERSION,
                'mysql_version' => $version[0]['ver'],
                'max_upload_size' => ini_get('upload_max_filesize'),
                'goodsCount' => Db::name('goods')->count('id'),

                'orderCount' => Db::name('order')->count('id') / 100,
                'tradeCount' => Db::name('order')->sum('tradeMoney') / 100,

                'dayHavaMoney'=> sprintf("%.2f",$list['dayHaveMoney'] / 100),
                'dayHadMoney'=>sprintf("%.2f",$list['HadOrderMoney']/100),

                'dayOrder'=>sprintf("%.2f",$list['haveOrder'] / 100),
                'dayHadOrder'=>sprintf("%.2f",$list['hadOrder'] / 100),
                'moneyRate'=>sprintf("%.2f",$list['HadOrderMoney']/$list['dayHaveMoney']),
                'orderRate'=>sprintf("%.2f",$list['hadOrder']/$list['haveOrder']),
                'recentlyOrder'=>$recentlyOrder,
                'user'=>Db::name('user')->where('status=1')->limit(0,10)->select(),
                'userCount'=>Db::name('user')->where('status=1')
                    ->where('create_time','>',time()-7*24*60*60)->count(),
                'manUser'=>Db::name('user')->where('status=1 and sex=1') ->count(),
                'womanUser'=>Db::name('user')->where('status=1 and sex=2') ->count(),
            ];
          //  Cache::set('main_config', $config, 3600);
        }



        View::assign('config', $config);
        return view();
    }


}